act <- read.csv("/activity/activity.csv", stringsAsFactors = FALSE)
act <- read.csv("activity/activity.csv", stringsAsFactors = FALSE)
View(act)
View(act)
act$date <- as.Date(act$date, "%Y%m%d")
View(act)
act <- read.csv("activity/activity.csv", stringsAsFactors = FALSE)
act$date <- as.Date(act$date, "%Y-m-d")
act <- read.csv("activity/activity.csv", stringsAsFactors = FALSE)
?as.Date
act$date <- as.Date(act$date, "%Y-%m-%d")
View(act)
View(act)
range(act$date)
totalsteps <- tapply(act$steps, act$date, sum, na.rm = TRUE)
hist(totalsteps)
str(totalsteps)
?hist
hist(totalsteps, labels = totalsteps)
hist(totalsteps, labels = dimnames)
hist(totalsteps, labels = dimnames(totalsteps))
hist(totalsteps, breaks =  = dimnames(totalsteps))
hist(totalsteps, breaks = dimnames(totalsteps))
with(totalsteps, hist)
str(totalsteps)
library(ggplot2)
qplot(totalsteps)
hist(totalsteps)
mean(totalsteps)
median(totalsteps)
totalmedian
View(act)
?tapply
avg5min <- tapply(act$steps, act$interval, mean, na.rm = TRUE)
24*60
/5
1440/5
plot(avg5min, type = "l")
str(avg5min)
avg5min$dimnames
dimnames(avg5min)
plot(avg5min, type = "l", main= "Average Number of Steps Taken, Averaged Across All Days", xlab = "Time Interval", ylab= "Average Number of Steps Taken")
plot(avg5min, type = "l", main= "Average Number of Steps Taken, Averaged Across All Days", xlab = "Time Interval", ylab= "Average Number of Steps Taken"
labels = dimnames(avg5min))
plot(avg5min, type = "l", main= "Average Number of Steps Taken, Averaged Across All Days", xlab = "Time Interval", ylab= "Average Number of Steps Taken"
,labels = dimnames(avg5min))
?plot
max(avg5min)
which(max(avg5min))
which(avg5min == max(avg5min))
dimnames(avg5min == 835)
avg5min == max(avg5min)
sum(avg5min == max(avg5min))
which.max(avg5min)
?which.max
summary(avg5min)
which(avg5min == max(avg5min, na.rm= TRUE))
avg5min[835]
presidents[1:30]
str(avg5min)
type(avg5min)
length(avg5min)
max(avg5min)
which(avg5min == max(avg5min))
which(avg5min == min(avg5min))
?which
which(avg5min == min(avg5min), arr.ind = TRUE)
which(avg5min == max(avg5min), arr.ind = TRUE)
dim(avg5min)
a <- which(avg5min == max(avg5min))
avg5min[which(avg5min == max(avg5min))]
dimnames(avg5min[which(avg5min == max(avg5min))])
names(which(avg5min[which(avg5min == max(avg5min))]))
names(avg5min[which(avg5min == max(avg5min))]
)
names(avg5min[which(avg5min == max(avg5min))])
```{r, echo = FALSE}
sum(!is.na(act$steps))
sum(is.na(act$steps))
indexmissing <- is.na(act$steps)
missing <- sum(indexmissing)
act[indexmissing,]
library(dplyr)
tapply(act$steps, act$date)
tapply(act$steps, act$date, mean, na.rm = TRUE)
newact <-act
?replace_na
?lapply
tapply(act$steps, act$interval, mean, na.rm = TRUE)
dimnames(tapply(act$steps, act$interval, mean, na.rm = TRUE))
act[indexmissing,]
act[indexmissing,]$steps
intervalmeans <- tapply(act$steps, act$interval, mean, na.rm = TRUE)
intervalmeans[835]
intervalmeans["835"]
replacena <- function(x){
intervalmeans <- tapply(act$steps, act$interval, mean, na.rm = TRUE)
x[indexmissing,]$steps <- intervalmeans[as.character(x$interval)]
}
newact <- lapply(newact, replacena)
newact <- lapply(newact, replacena(newact))
x[indexmissing,]$steps <- intervalmeans[as.character(x[indexmissing,]$interval)]
replacena <- function(x){
intervalmeans <- tapply(x$steps, x$interval, mean, na.rm = TRUE)
x[indexmissing,]$steps <- intervalmeans[as.character(x[indexmissing,]$interval)]
}
newact <- lapply(newact, replacena(newact))
replacena <- function(x){
intervalmeans <- tapply(x$steps, x$interval, mean, na.rm = TRUE)
x[indexmissing,]$steps <- intervalmeans[as.character(x[indexmissing,]$interval)]
}
newact <- lapply(newact, replacena(newact))
View(newact)
newact <- lapply(newact, function(x){
intervalmeans <- tapply(x$steps, x$interval, mean, na.rm = TRUE)
x[indexmissing,]$steps <- intervalmeans[as.character(x[indexmissing,]$interval)]
})
replacena <- function(x){
intervalmeans <- tapply(x$steps, x$interval, mean, na.rm = TRUE)
x[indexmissing,]$steps <- intervalmeans[as.character(x[indexmissing,]$interval)]
x
}
newact <- lapply(newact, replacena(newact))
replacena <- function(){
intervalmeans <- tapply(x$steps, x$interval, mean, na.rm = TRUE)
x[indexmissing,]$steps <- intervalmeans[as.character(x[indexmissing,]$interval)]
x
}
newact <- lapply(newact, replacena(newact))
View(replacena)
debug(replacena)
newact <- lapply(newact, replacena(newact))
replacena <- function(newact){
intervalmeans <- tapply(x$steps, x$interval, mean, na.rm = TRUE)
x[indexmissing,]$steps <- intervalmeans[as.character(x[indexmissing,]$interval)]
x
}
newact <- lapply(newact, replacena(newact))
replacena <- function(x){
intervalmeans <- tapply(x$steps, x$interval, mean, na.rm = TRUE)
x[indexmissing,]$steps <- intervalmeans[as.character(x[indexmissing,]$interval)]
x
}
newact <- lapply(newact, replacena(newact))
str(newact)
str(newact$steps)
intervalmeans <- tapply(x$steps, x$interval, mean, na.rm = TRUE)
intervalmeans <- tapply(newact$steps, newact$interval, mean, na.rm = TRUE)
newact[indexmissing,]$steps <- intervalmeans[as.character(newact[indexmissing,]$interval)]
indexmissing <- is.na(act$steps)
missing <- sum(indexmissing)
library(dplyr)
newact <-act
intervalmeans <- tapply(newact$steps, newact$interval, mean, na.rm = TRUE)
newact[indexmissing,]$steps <- intervalmeans[as.character(newact[indexmissing,]$interval)]
totalsteps2 <- tapply(newact$steps, newact$date, sum, na.rm = TRUE)
hist(totalsteps2)
totalmean2 <- mean(totalsteps2)
totalmedian2 <- median(totalsteps2)
weekdays()
?weekdays
weekdays(newact$date)
library(dplyr)
?mutate
newact %>% mutate(days = weekdays(date))
newact <- newact %>% mutate(days = weekdays(date))
newact <- mutate(newact, days = weekdays(date))
lapply(newact, mean)
?tapply(newact$days, )
isweekday <- function(x){
if(x == "Saturday" | x == "Sunday")
x = "Weekend"
else
x = "Weekday"
}
?apply
str(newact$days)
apply(newact$days, isweekday(newact$days))
apply(newact$days, FUN = isweekday(newact$days))
isweekday(newact$days)
if(x == "Saturday")
isweekday <- function(x){
if(x == "Saturday")
x = "Weekend"
else
x = "Weekday"
}
isweekday <- function(x){
if(x == "Saturday")
x = "Weekend"
else
x = "Weekday"
}
isweekday(newact$days)
isweekday <- function(x){
if(x == "Saturday"){
x = "Weekend"
}
else x = "Weekday"
}
isweekday("Saturday")
isweekday("Saturday")
a <- isweekday("Saturday")
a <- isweekday(newact$days)
isweekday <- function(x){
for(i in length(x)){
if(x == "Saturday"){
x = "Weekend"
}
else x = "Weekday"
}
}
isweekday(newact$days)
a <- isweekday(newact$days)
isweekday <- function(x){
if(x == "Saturday" || x == "Sunday"){
x = "Weekend"
}
else x = "Weekday"
}
isweekday <- function(x){
if(x == "Saturday" || x == "Sunday"){
x = "Weekend"
}
else x = "Weekday"
x
}
isweekday("Saturday")
isweekday("Saturda")
isweekday("Sunday")
apply(newact$days, FUN = isweekday())
apply(newact$days, FUN = isweekday(newact$days))
temp <- c("Monday")
temp <- c("Monday", "Tuesday")
isweekday(temp)
isweekday(temp)
apply(temp, FUN = isweekday(temp))
iswekday <- function(x){
if(x == "Saturday" || x == "Sunday"){
x = "Weekend"
}
else x = "Weekday"
x
}
apply(temp, FUN = iswekday(temp))
apply(temp, function(x){
if(x == "Saturday" || x == "Sunday"){
x = "Weekend"
}
else x = "Weekday"
x
}
)
apply(temp, FUN = function(x){
if(x == "Saturday" || x == "Sunday"){
x = "Weekend"
}
else x = "Weekday"
x
})
newact <- mutate(newact, days = weekdays(date)
newact <- mutate(newact, days = weekdays(date))
newact <- mutate(newact, days = weekdays(date))
for (i in length(newact$days)){
if (newact[i,]$days == "Saturday" || newact[i,]$days == "Sunday"){
newact[i,]$days = "weekend"
}
}
View(newact)
unique(newact$days)
length(newact$days)
newact[15,]$days
for (i in length(newact$days)){
if (newact[i,]$days == "Saturday"){
newact[i,]$days = "weekend"
}
}
unique(newact$days)
newact[15,]$days == "Monday"
for (i in 1:length(newact$days)){
if (newact[i,]$days == "Saturday"){
newact[i,]$days = "weekend"
}
}
unique(newact$days)
for (i in 1:length(newact$days)){
if (newact[i,]$days == "Saturday"|| newact[i,]$days == "Sunday"){
newact[i,]$days = "weekend"
}
}
for (i in 1:length(newact$days)){
if (newact[i,]$days == "Saturday"|| newact[i,]$days == "Sunday"){
newact[i,]$days = "weekend"
}
else newact[i,]$days = "weekday"
}
newact$days <- factor(newact$days, levels = c("weekday","weekend"))
library(lattice)
?xyplot
library(ggplot2)
qplot(interval, steps, data = newact, facets= .~days)
qplot(interval, steps, data = newact, facets= days~.)
qplot(interval, tapply(steps, interval, mean), data = newact, facets= days~.)
qplot(interval, a =tapply(steps, interval, mean), data = newact, facets= days~.)
qplot(interval, a =tapply(newact$steps, newact$interval, mean), data = newact, facets= days~.)
?qplot
qplot(interval, a =tapply(newact$steps, newact$interval, mean), data = newact, facets= days~., geom = "line")
qplot(interval, a =tapply(newact$steps, newact$interval, mean), data = newact, facets= days~., geom = "point")
avg5min <- tapply(act$steps, act$interval, mean, na.rm = TRUE)
plot(avg5min, type = "l", main= "Average Number of Steps Taken, Averaged Across All Days", xlab = "Time Interval", ylab= "Average Number of Steps Taken")
max5min <- names(avg5min[which(avg5min == max(avg5min))])
wkday <- subset(newact, days = 1)
View(wkday)
wkday <- subset(newact, days = "weekday")
wkday <- subset(newact, days == "weekday")
wkday <- subset(newact, days == 1)
wkday <- subset(newact, days == ""weekday")
wkday <- subset(newact, days == "weekday")
View(wkday)
wknd <- subset(newact, days == "weekend")
wknd <- subset(newact, which(days == "weekend"))
?xyplot
xyplot(steps, intervals | days, data = newact)
xyplot(steps ~ intervals | days, data = newact)
xyplot(steps ~ interval | days, data = newact)
xyplot(steps ~ interval | days, data = newact, layout = c(1,2))
xyplot(steps ~ interval | days, data = newact, layout = c(1,2),
panel = function(interval, steps, ...){
tmp <- tapply(steps, interval, mean)
panel.xyplot(interval, tmp, ...)
}
)
xyplot(newact$steps ~ newact$interval | newact$days, layout = c(1,2))
xyplot(newact$steps ~ newact$interval | newact$days, layout = c(2,1))
xyplot(newact$steps ~ newact$interval | newact$days)
newact$days <- factor(newact$days, levels = c("weekday","weekend"), labels = c("weekday", "weekend"))
xyplot(newact$steps ~ newact$interval | newact$days)
xyplot(steps ~ interval | days, data = newact)
?xyplot
xyplot(steps ~ interval | days, data = newact, groups = days)
xyplot(newact$steps ~ newact$interval | newact$days, layout = c(1,2))
xyplot(newact$steps ~ newact$interval | newact$days, layout = c(1,2))
xyplot(newact$steps ~ newact$interval | newact$days, layout = c(1,2,3))
xyplot(newact$steps ~ newact$interval | newact$days, layout = c(5,5))
xyplot(newact$steps ~ newact$interval | newact$days, layout = c(5,5))
View(newact)
newact <- mutate(act, days = weekdays(date))
for (i in 1:length(newact$days)){
if (newact[i,]$days == "Saturday"|| newact[i,]$days == "Sunday"){
newact[i,]$days = "weekend"
}
else newact[i,]$days = "weekday"
}
View(newact)
newact$days <- factor(newact$days, levels = c("weekday","weekend"), labels = c("weekday", "weekend"))
xyplot(newact$steps ~ newact$interval | newact$days, layout = c(5,5))
xyplot(newact$steps ~ newact$interval | newact$days, layout = c(2,1))
xyplot(newact$steps ~ newact$interval | newact$days, layout = c(1,2))
xyplot(steps ~ interval | days, data = newact, layout = c(1,2), type = "l")
xyplot(steps ~ interval | days, data = newact, layout = c(1,2), type = "l",
panel = function(newact$interval, newact$steps){
xyplot(steps ~ interval | days, data = newact, layout = c(1,2), type = "l",
panel = function(interval, steps){
tmp <- tapply(steps, interval, mean)
panel.xyplot(interval, tmp)
}
)
debug(xyplot)
xyplot(steps ~ interval | days, data = newact, layout = c(1,2), type = "l",
panel = function(interval, steps){
tmp <- tapply(steps, interval, mean)
panel.xyplot(interval, tmp)
}
)
function (x, data, ...)
UseMethod("xyplot")
xyplot(steps ~ interval | days, data = newact, layout = c(1,2), type = "l")
undebug(xyplot)
xyplot(steps ~ interval | days, data = newact, layout = c(1,2), type = "l")
xyplot(mean(steps) ~ interval | days, data = newact, layout = c(1,2), type = "l")
xyplot(mean(steps) ~ interval | days, data = newact, layout = c(1,2), type = "l")
xyplot(steps + 1 ~ interval | days, data = newact, layout = c(1,2), type = "l")
xyplot(steps + 1 ~ interval | days, data = newact, layout = c(1,2), type = "l")
xyplot(steps + 1000000 ~ interval | days, data = newact, layout = c(1,2), type = "l")
xyplot(steps + 1000000 ~ interval | days, data = newact, layout = c(1,2), type = "l")
xyplot(steps + 1000 ~ interval | days, data = newact, layout = c(1,2), type = "l")
xyplot(steps ~ interval | days, data = newact, layout = c(1,2), type = "l")
xyplot(tapply(steps, interval, mean) ~ interval | days, data = newact, layout = c(1,2), type = "l")
xyplot(tapply(steps, interval, mean) ~ interval | days, data = newact, layout = c(1,2), type = "l")
xyplot(tapply(steps, interval, sum) ~ interval | days, data = newact, layout = c(1,2), type = "l")
xyplot(tapply(steps, interval, sum) ~ interval | days, data = newact, layout = c(1,2), type = "l")
xyplot(steps/2 ~ interval | days, data = newact, layout = c(1,2), type = "l")
xyplot(steps/2 ~ interval | days, data = newact, layout = c(1,2), type = "l")
mypanel <- function(x,y){
tmp <- tapply(x,y, mean)
panel.xyplot(x,tmp, type = "l")
}
xyplot(steps ~ interval | days, data = newact, layout = c(1,2), type = "l", panel = mypanel)
xyplot(steps ~ interval | days, data = newact, layout = c(1,2), type = "l", panel = mypanel)
mypanel <- function(x,y){
tmp <- tapply(y,x, mean)
}
mypanel <- function(x,y){
tmp <- tapply(y,x, mean)
tmp
}
mypanel(newact$steps, newact$interval, mean)
mypanel(newact$steps, newact$interval)
mypanel <- function(y,x){
tmp <- tapply(y,x, mean)
tmp
}
mypanel(newact$steps, newact$interval, mean)
mypanel(newact$steps, newact$interval)
View(newact)
newact <-act
intervalmeans <- tapply(newact$steps, newact$interval, mean, na.rm = TRUE)
newact[indexmissing,]$steps <- intervalmeans[as.character(newact[indexmissing,]$interval)]
newact2 <- mutate(newact, days = weekdays(date))
View(newact2)
for (i in 1:length(newact2$days)){
if (newact2[i,]$days == "Saturday"|| newact2[i,]$days == "Sunday"){
newact2[i,]$days = "weekend"
}
else newact2[i,]$days = "weekday"
}
newact2$days <- factor(newact2$days, levels = c("weekday","weekend"), labels = c("weekday", "weekend"))
xyplot(steps ~ interval | days, data = newact2, layout = c(1,2), type = "l", panel = mypanel)
xyplot(steps ~ interval | days, data = newact2, layout = c(1,2), type = "l", panel = mypanel)
xyplot(steps ~ interval | days, data = newact2, layout = c(1,2), type = "l")
xyplot(steps ~ interval | days, data = newact2, layout = c(1,2), type = "l")
mypanel <- function(y,x){
tmp <- tapply(y,x, mean)
tmp
}
mypanel(newact2$steps, newact2$interval)
xyplot(tapply(steps, interval, mean) ~ interval | days, data = newact2, layout = c(1,2), type = "l")
View(newact2)
View(newact2)
length(tapply(newact2$steps, newact2$interval, mean))
?tapply
wkday <- filter(newact2, days == "weekend")
View(wkday)
wknd <- filter(newact2, days == "weekend")
wkday <- filter(newcat2, days == "weekday")
wkday <- filter(newact2, days == "weekday")
wknd$temp <- tapply(wknd$steps, wknd$interval, mean)
View(wknd)
wkday$temp <- tapply(wkday$steps, wkday$interval, mean)
View(wkday)
View(wknd)
?merge
newact3 <- merge(wknd, wkday, by = "interval")
View(newact3)
newact3 <- cbind(wknd, wkday)
newact3 <- rbind(wknd, wkday)
View(newact3)
xyplot(temp ~ interval | days, data = newact3, layout = c(1,2), type = "l")
